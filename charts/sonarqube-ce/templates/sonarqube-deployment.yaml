apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sonarqube-ce.sonarqube.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "sonarqube-ce.name" . }}
    app.kubernetes.io/component: sonarqube
    helm.sh/chart: {{ include "sonarqube-ce.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  template:
    metadata:
      name: {{ include "sonarqube-ce.sonarqube.fullname" . }}
      labels:
        app.kubernetes.io/name: {{ include "sonarqube-ce.name" . }}
        app.kubernetes.io/component: sonarqube
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: configure-sysctl
          image: bash:5.0.16
          securityContext:
            privileged: true
          command:
            - /usr/local/bin/bash
            - -c
            - |
              MAX_MAP_COUNT=$(sysctl -n vm.max_map_count)
              if [[ $MAX_MAP_COUNT < 262144 ]]; then
                echo "Update vm.max_map_count to 262144"
                sysctl -w vm.max_map_count=262144
              else
                echo "vm.max_map_count current value is $MAX_MAP_COUNT"
              fi

              FILE_MAX=$(sysctl -n fs.file-max)
              if [[ $FILE_MAX < 65536 ]]; then
                echo "Update fs.file-max to 65536"
                sysctl -w fs.file-max=65536
              else
                echo "fs.file-max current value is $FILE_MAX"
              fi
      containers:
        - name: {{ include "sonarqube-ce.sonarqube.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          env:
            - name: SONAR_JDBC_URL
              value: "jdbc:postgresql://{{ include "sonarqube-ce.postgresql.fullname" . }}/{{ .Values.postgresql.database }}"
            - name: SONAR_JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "sonarqube-ce.postgresql.fullname" . }}
                  key: username
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "sonarqube-ce.postgresql.fullname" . }}
                  key: password
            - name: SONAR_TELEMETRY_ENABLE
              value: "false"
          resources: {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /opt/sonarqube/conf
              name: sonarqube-conf
            - mountPath: /opt/sonarqube/data
              name: sonarqube-data
            - mountPath: /opt/sonarqube/logs
              name: sonarqube-logs
            - mountPath: /opt/sonarqube/extensions
              name: sonarqube-extensions
            - mountPath: /opt/sonarqube/temp
              name: sonarqube-temp
      restartPolicy: Always
      volumes:
        - name: tmp
          emptyDir: {}
        - name: sonarqube-conf
          configMap:
            name: {{ include "sonarqube-ce.sonarqube.fullname" . }}-config
            items:
              - key: sonar.properties
                path: sonar.properties
        - name: sonarqube-data
          {{- if .Values.persistence.data.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.data.existingClaim | default (printf "%s-data" (include "sonarqube-ce.sonarqube.fullname" .)) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: sonarqube-logs
          {{- if .Values.persistence.logs.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "sonarqube-ce.sonarqube.fullname" . }}-logs
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: sonarqube-extensions
          {{- if .Values.persistence.extensions.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "sonarqube-ce.sonarqube.fullname" . }}-extensions
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: sonarqube-temp
          emptyDir: {}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "sonarqube-ce.name" . }}
      app.kubernetes.io/component: sonarqube
      app.kubernetes.io/instance: {{ .Release.Name }}
